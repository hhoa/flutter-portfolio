# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml
# The rules that we're including above are defined in this file
# https://github.com/flutter/packages/blob/master/packages/flutter_lints/lib/flutter.yaml
# which also includes these rules
# https://github.com/dart-lang/lints/blob/main/lib/recommended.yaml
# and these rules
# https://github.com/dart-lang/lints/blob/main/lib/core.yaml
# It means that we don't need to redefine those rules manually,
# because they're already automatically included by the statement above
analyzer:
  exclude:
     - lib/generated/**
linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # - avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # - prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule
    - directives_ordering
    - lines_longer_than_80_chars
    - package_api_docs
    # - public_member_api_docs
    - comment_references
    - prefer_relative_imports
    - prefer_typing_uninitialized_variables
    - avoid_init_to_null
    - prefer_interpolation_to_compose_strings
    - unnecessary_lambdas
    - avoid_catches_without_on_clauses
    - avoid_catching_errors
    - use_to_and_as_if_applicable
    - one_member_abstracts
    - avoid_classes_with_only_static_members
    - prefer_mixin
    - use_setters_to_change_properties
    - avoid_setters_without_getters
    - avoid_returning_this
    - type_annotate_public_apis
    - avoid_private_typedef_functions
    - avoid_positional_boolean_parameters
    - avoid_equals_and_hash_code_on_mutable_classes

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
